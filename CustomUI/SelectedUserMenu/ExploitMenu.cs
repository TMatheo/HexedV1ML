using LUXED.Core;
using LUXED.Extensions;
using LUXED.Modules.Standalone;
using LUXED.UIApi;
using LUXED.Wrappers;
using System;

namespace LUXED.CustomUI.SelectedUserMenu
{
    internal class ExploitMenu
    {
        private static QMMenuPage ExploitPage;
        public static void Init()
        {
            ExploitPage = new QMMenuPage("Player Exploits");

            QMSingleButton OpenMenu = new QMSingleButton(MainMenu.ClientPage, 3, 0, "Exploits", ExploitPage.OpenMe, "Exploit Options", ButtonAPI.ButtonSize.Default, UnityUtils.GetSprite("Exploits"));

            new QMToggleButton(ExploitPage, 1, 0, "Voice \nRepeat", delegate
            {
                InternalSettings.RepeatVoiceActor = PlayerSimplifier.GetSelectedPlayer().GetPhotonPlayer().ActorID();
            }, delegate
            {
                InternalSettings.RepeatVoiceActor = -2;
            }, "Repeat the Players Voice Events");

            new QMToggleButton(ExploitPage, 2, 0, "Chat \nRepeat", delegate
            {
                InternalSettings.RepeatChatActor = PlayerSimplifier.GetSelectedPlayer().GetPhotonPlayer().ActorID();
            }, delegate
            {
                InternalSettings.RepeatChatActor = -1;
            }, "Repeat the Players Chat Events");

            new QMSingleButton(ExploitPage, 3, 0, "Teleport \nItems", delegate
            {
                ItemHelper.ItemsToPlayer(PlayerSimplifier.GetSelectedPlayer());
            }, "Teleport all Items to the Player", ButtonAPI.ButtonSize.Half);

            new QMSingleButton(ExploitPage, 3, 0.5f, "Crash \nPortal", delegate
            {
                new VRC.Core.ApiWorldInstance() { id = $"wrld_5b89c79e-c340-4510-be1b-476e9fcdedcc:{EncryptUtils.RandomStringNumber(5)}" }.Fetch(new Action<VRC.Core.ApiContainer>((container) =>
                {
                }));
            }, "Drop a Portal in the Player", ButtonAPI.ButtonSize.Half);

            new QMToggleButton(ExploitPage, 4, 0, "Portal \nKOS", delegate
            {
                GameHelper.VRCUiPopupManager.AskInGameInput("Portal KOS", "Ok", delegate (string text)
                {
                    ExploitHandler.PortalKOS(PlayerSimplifier.GetSelectedPlayer()).Start();
                }, "XXXXXXXX");
            }, delegate
            {
                ExploitHandler.isPortalKOSEnabled = false;
            }, "Drop Portals in the Player");

            new QMToggleButton(ExploitPage, 1, 1, "Udon \nDesync", delegate
            {
                ExploitHandler.UdonSpam(PlayerSimplifier.GetSelectedPlayer()).Start();
            }, delegate
            {
                ExploitHandler.isUdonSpamming = false;
            }, "Desync the player using Udon");

            new QMToggleButton(ExploitPage, 3, 1, "Collapse", delegate
            {
                ExploitHandler.Collapse(PlayerSimplifier.GetSelectedPlayer()).Start();
            }, delegate
            {
                ExploitHandler.isCollapse = false;
            }, "Collapse the Player with Items");
        }
    }
}

